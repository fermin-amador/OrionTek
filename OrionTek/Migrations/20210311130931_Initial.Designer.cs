// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrionTek.Data;

namespace OrionTek.Migrations
{
    [DbContext(typeof(OrionTekDbContext))]
    [Migration("20210311130931_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OrionTek.Data.Models.Cliente", b =>
                {
                    b.Property<int>("clienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("empresaId")
                        .HasColumnType("int");

                    b.Property<int>("genero")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("clienteId");

                    b.HasIndex("empresaId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("OrionTek.Data.Models.Direccion", b =>
                {
                    b.Property<int>("direccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("calle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("clienteId")
                        .HasColumnType("int");

                    b.Property<string>("codigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("direccionId");

                    b.HasIndex("clienteId");

                    b.ToTable("Direcciones");
                });

            modelBuilder.Entity("OrionTek.Data.Models.Empresa", b =>
                {
                    b.Property<int>("empresaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("empresaId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("OrionTek.Data.Models.Cliente", b =>
                {
                    b.HasOne("OrionTek.Data.Models.Empresa", "empresa")
                        .WithMany("clientes")
                        .HasForeignKey("empresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("empresa");
                });

            modelBuilder.Entity("OrionTek.Data.Models.Direccion", b =>
                {
                    b.HasOne("OrionTek.Data.Models.Cliente", "cliente")
                        .WithMany("direcciones")
                        .HasForeignKey("clienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cliente");
                });

            modelBuilder.Entity("OrionTek.Data.Models.Cliente", b =>
                {
                    b.Navigation("direcciones");
                });

            modelBuilder.Entity("OrionTek.Data.Models.Empresa", b =>
                {
                    b.Navigation("clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
